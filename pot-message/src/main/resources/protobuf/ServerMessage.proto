syntax = "proto3";
package ProtoMessage;
option java_package = "org.mmo.message";
option java_multiple_files = true;
option java_outer_classname = "ServerMessage";
option go_package = "message";


//服务器内部消息

//服务器列表 遗弃
message ServerListRequest {
  int32 type = 2;//服务器类型
}
//服务器列表
message ServerListResponse {
  repeated ServerInfo server = 2; // 服务器列表
}

// 服务器信息
message ServerInfo {
  int32 id = 1;// 服务器ID
  int32 belongID = 2;// 归属服务器ID，即被合并到哪个服
  string ip = 3;// 内网地址
  int32 type = 4;// 类型
  int32 port = 5;// 端口
  int32 state = 6; //// 状态 -1表示维护；0表示准备开启；1表示正常，2表示不显示，3表示内部开启
  string version = 7;// 版本号
  string content = 8;//服务器信息：
  int32 online = 11;// 在线人数
  int32 maxUserCount = 12;// 最大在线人数
  int32 httpPort = 13;// http端口
  string openTime = 14;//开服时间
  string maintainTime = 15;//维护时间
  string name = 16;//名字
  string wwwip = 17;// 外网地址
  int32 gamePort = 18;// 网关游戏服端口
}


// 注册更新服务器
message ServerRegisterUpdateRequest {
  ServerInfo serverInfo = 2;
}
// 注册更新服务器
message ServerRegisterUpdateResponse {
  ServerInfo serverInfo = 1;
  int32 status = 2; //0成功
}

// 加载脚本
message LoadScriptRequest{
  string path = 1; //加载路径，null全加载
}
message LoadScriptResponse{
  string info = 1; //加载信息
}

//http 调用
message HttpRequest{
  string path                 = 1; //路径
  int64 id                    = 2; //唯一标识id
  string jsonParam            = 3; //json字符串参数
}
//http 调用
message HttpResponse{
  int32 code                  = 2; //结果码 200成功
  string result               = 3; //返回结果字符串
}


//rpc
service ServerService{
  //服务器注册
  rpc ServerRegister (ServerRegisterUpdateRequest) returns (ServerRegisterUpdateResponse);
  //服务器更新
  rpc ServerUpdate (ServerRegisterUpdateRequest) returns (ServerRegisterUpdateResponse);
  //获取服务器列表
  rpc ServerList (ServerListRequest) returns (ServerListResponse);
  //加载脚本
  rpc LoadScript (LoadScriptRequest) returns (LoadScriptResponse);
  //http请求
  rpc httpPost(HttpRequest) returns (HttpResponse);
}
